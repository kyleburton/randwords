#!/usr/bin/env bash

function latest_git_tag () {
  git tag -l | tail -n1
}

function next_git_tag () {
  local curr_tag="$(latest_git_tag)"
  if [ -z "$curr_tag" ]; then
    echo "v1.0.0"
    return
  fi

  echo "$curr_tag" | perl -ne '/v(\d+)\.(\d+)\.(\d+)/; $v = $3+1; print "v$1.$2.$v\n"'
}

bake_task init "Init a development environment"
function init () {
  go get github.com/goreleaser/goreleaser
}

bake_task release "Create & push a release to github"
function release () {
  # export GITHUB_TOKEN=`YOUR_TOKEN`
  if [ -e "$HOME/.github.d/github.env" ]; then
    source "$HOME/.github.d/github.env"
  fi

  if [ -z "${GITHUB_TOKEN:-}" ]; then
    echo "Error: you have to set your GITHUB_TOKEN before cutting a release"
    exit 1
  fi
  local next_tag="$(next_git_tag)"
  echo "creating release with tag: $next_tag"
  git tag -a "$next_tag" -m "Releasing: $next_tag"
  goreleaser
}

bake_task generate-embedded-words-db "Generate the go code for the embedded word list."
function generate-embedded-words-db () {
  test -d tmp || mkdir tmp
  test -e tmp/EOWL.zip || curl -o tmp/EOWL.zip "http://dreamsteep.com/downloads/word-games-and-wordsmith-utilities/121-the-english-open-word-list-eowl/file.html"
  (
  cd tmp
  test -d EOWL-v1.1.2 || unzip EOWL.zip
  cd ..
  )

  find "tmp/EOWL-v1.1.2/LF Delimited Format" -name '? Words.txt' -print0 \
      | xargs -0 cat \
      | grep -vE '[A-Z]' \
      > tmp/all-words.txt

  cat > words.go <<END
package main

var Words []string = []string{
END

  while read LINE; do
      echo "   \"$LINE\"," >> words.go
  done < tmp/all-words.txt

  cat >> words.go <<END
}
END
}
